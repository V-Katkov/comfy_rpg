let xp = 0;
let health = 100;
let gold = 50;
let currentWeapon = 0;
let fighting;
let monsterHealth;
let inventory = ["–û–ª—ñ–≤–µ—Ü—å"];

const button1 = document.querySelector('#button1');
const button2 = document.querySelector("#button2");
const button3 = document.querySelector("#button3");
const text = document.querySelector("#text");
const xpText = document.querySelector("#xpText");
const healthText = document.querySelector("#healthText");
const goldText = document.querySelector("#goldText");
const monsterStats = document.querySelector("#monsterStats");
const monsterName = document.querySelector("#monsterName");
const monsterHealthText = document.querySelector("#monsterHealth");
const weapons = [
  { name: '–û–ª—ñ–≤–µ—Ü—å', power: 5 },
  { name: '–ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–π –Ω—ñ–∂', power: 30 },
  { name: '–í—ñ–¥–±–∏–≤–Ω–∏–π –º–æ–ª–æ—Ç–æ–∫', power: 50 },
  { name: "–°–∫–æ–≤–æ—Ä–æ–¥–∞ Tefal", power: 100 }
];
const monsters = [
  {
    name: ['–¢–∞–Ω—è', '–°–µ—Ä–≥–µ–π', '–ú–∞–∫—Å—ñ–º'],
    level: 2,
    health: 15
  },
  {
    name: ["–õ–∞—Ä—ñ–Ω", "–î—ñ–¥—ñ", 'SlowBOY', 'SweetBOY'],
    level: 8,
    health: 60
  },
  {
    name: ["–ù–∞—Ç–∞—à–∫–∞"],
    level: 20,
    health: 300
  }
]
const locations = [
  {
    name: "town square",
    "button text": ["–ú–∞–≥–∞–∑–∏–Ω", "–ü—ñ—Ç–∏ –≤ –Ω–µ —á–µ—Ä–≥–∏", "–ë—ñ–π –∑ –ù–∞—Ç–∞—à–∫–æ—é"],
    "button functions": [goStore, goCave, fightDragon],
    text: "–¢–∏ –≤ —Ç–æ—Ä–≥–æ–≤–æ–º—É –∑–∞–ª—ñ, —à—É–∫–∞–π –∫–æ–≥–æ –ø—ñ–¥—Ä—ñ–∑–∞—Ç–∏!"
  },
  {
    name: "store",
    "button text": ["–í–∏–ø–∏—Ç–∏ –∫–∞–≤–∏ (20 –≥—Ä–Ω.)", "–ö—É–ø–∏—Ç–∏ –∑–±—Ä–æ—é (30 –≥—Ä–Ω.)", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É"],
    "button functions": [buyHealth, buyWeapon, goTown],
    text: "–ü–∏–π –∫–∞–≤—É, —â–æ–± –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é –∞–±–æ –∑–±—Ä–æ—é, —â–æ–± –∑–∞–≤–¥–∞–≤–∞—Ç–∏ –±—ñ–ª—å—à–µ –≤—Ç—Ä–∞—Ç–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É."
  },
  {
    name: "cave",
    "button text": ["–ë–∏—Ç–≤–∞ –∑–∞ —á–∞–π–Ω–∏–∫", "–ë–∏—Ç–≤–∞ –∑–∞ –ø—Ä–µ–º–∫—É", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É"],
    "button functions": [fightSlime, fightBeast, goTown],
    text: "–ü—ñ–¥—ñ–π—à–æ–≤—à–∏ –≤ –Ω–µ —á–µ—Ä–≥–∏ –¥–æ –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∏ –º–∞—î—à –ø–æ–¥–æ–ª–∞—Ç–∏ –∫–æ–ª–µ–≥—É —è–∫–æ–≥–æ –ø—ñ–¥—Ä—ñ–∑–∞—î—à."
  },
  {
    name: "fight",
    "button text": ["–ê—Ç–∞–∫–∞", "–£—Ö–∏–ª", "–í—Ç—ñ–∫—Ç–∏"],
    "button functions": [attack, dodge, goTown],
    text: "–ë—ñ–π –ø–æ—á–∞–≤—Å—è!"
  },
  {
    name: "kill monster",
    "button text": ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É"],
    "button functions": [goTown, goTown, easterEgg],
    text: '–¢–∏ –ø–æ–¥–æ–ª–∞–≤ –∫–æ–ª–µ–≥—É —Ç–∞ –ø—Ä–æ–¥–∞–≤ —Ç–æ–≤–∞—Ä, –ø—ñ–¥–∏ –∫—É–ø–∏ —Å–æ–±—ñ –∫–∞–≤–∏ –Ω–∞ —Ç—ñ –∫–æ–ø—ñ–π–∫–∏ —è–∫—ñ –∑–∞–ø–ª–∞—Ç–∏–ª–æ —Ç–æ–±—ñ COMFY'
  },
  {
    name: "lose",
    "button text": ["–ó–∞–Ω–æ–≤–æ?", "–ó–∞–Ω–æ–≤–æ?", "–ó–∞–Ω–æ–≤–æ?"],
    "button functions": [restart, restart, restart],
    text: "–¢–∏ –∑–¥–æ—Ö! ‚ò†Ô∏è"
  },
  { 
    name: "win", 
    "button text": ["–ó–∞–Ω–æ–≤–æ?", "–ó–∞–Ω–æ–≤–æ?", "–ó–∞–Ω–æ–≤–æ?"], 
    "button functions": [restart, restart, restart], 
    text: "–¢–∏ –ø–æ–¥–æ–ª–∞–≤ –ù–∞—Ç–∞—à–∫—É —Ç–∞ –≤–∏–≥—Ä–∞–≤ –ì–†–£ üéâ" 
  },
  {
    name: "easter egg",
    "button text": ["2", "8", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–µ—Ä–≥—É"],
    "button functions": [pickTwo, pickEight, goTown],
    text: "–ù–∞ –¥–æ—Ä–æ–∑—ñ –≤ —á–µ—Ä–≥—É —Ç–∏ –∑—É—Å—Ç—Ä—ñ—á–∞—î—à –î–∏—Ä–µ–∫—Ç–æ—Ä–∞, —è–∫–∏–π –ø—Ä–æ–ø–æ–Ω—É—î —Ç–æ–±—ñ \"–∫—Ä—É—Ç–∞–Ω—É—Ç–∏\" —Ä—É–ª–µ—Ç–∫—É, –≤–∏–±–µ—Ä–∏ –≤–∏–≥—Ä–∞—à–Ω—É —Ü–∏—Ñ—Ä—É —Ç–∞ —É —Ä–∞–∑—ñ –≤–∏–≥—Ä–∞—à—É –æ—Ç—Ä–∏–º–∞–π 20 –≥—Ä–Ω –∞ —É —Ä–∞–∑—ñ –ø—Ä–æ–≥—Ä–∞—à—É –≤—Ç—Ä–∞—Ç–∏—à 10 –≥—Ä–Ω."
  }
];

// initialize buttons
button1.onclick = goStore;
button2.onclick = goCave;
button3.onclick = fightDragon;

function update(location) {
  monsterStats.style.display = "none";
  button1.innerText = location["button text"][0];
  button2.innerText = location["button text"][1];
  button3.innerText = location["button text"][2];
  button1.onclick = location["button functions"][0];
  button2.onclick = location["button functions"][1];
  button3.onclick = location["button functions"][2];
  text.innerText = location.text;
}

function goTown() {
  update(locations[0]);
}

function goStore() {
  update(locations[1]);
}

function goCave() {
  update(locations[2]);
}

function buyHealth() {
  if (gold >= 20) {
    gold -= 20;
    health += 10;
    goldText.innerText = gold;
    healthText.innerText = health;
    text.innerText = "–¢–∏ –≤–∏–ø–∏–≤ –∫–∞–≤–∏ —Ç–∞ –≤—ñ–¥–Ω–æ–≤–∏–≤ 10 –µ–Ω–µ—Ä–≥—ñ—ó";
  } else {
    text.innerText = "–£ —Ç–µ–±–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π –Ω–∞ –∫–∞–≤—É.";
  }
}

function buyWeapon() {
  if (currentWeapon < weapons.length - 1) {
    if (gold >= 30) {
      gold -= 30;
      currentWeapon++;
      goldText.innerText = gold;
      let newWeapon = weapons[currentWeapon].name;
      text.innerText = "–¢–µ–ø–µ—Ä —É —Ç–µ–±–µ —î " + newWeapon + ".";
      inventory.push(newWeapon);
      text.innerText += " –¢–∏ –º–∞—î—à –ø—Ä–∏ —Å–æ–±—ñ: " + inventory;
    } else {
      text.innerText = "–£ —Ç–µ–±–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π —â–æ–± –ø—Ä–∏–¥–±–∞—Ç–∏ —Å–æ–±—ñ –∑–±—Ä–æ—é.";
    }
  } else {
    text.innerText = "–£ —Ç–µ–±–µ —Å–∞–º–∞ –¢–û–ü–æ–≤–∞ –∑–±—Ä–æ—è —É —Ü—ñ–π –≥—Ä—ñ";
    button2.innerText = "–ü—Ä–æ–¥–∞—Ç–∏ –∑–±—Ä–æ—é –∑–∞ 15 –≥—Ä–Ω";
    button2.onclick = sellWeapon;
  }
}

function sellWeapon() {
  if (inventory.length > 1) {
    gold += 15;
    goldText.innerText = gold;
    let currentWeapon = inventory.shift();
    text.innerText = "–¢–∏ –ø—Ä–æ–¥–∞–≤ " + currentWeapon + ".";
    text.innerText += " –¢–∏ –º–∞—î—à –ø—Ä–∏ —Å–æ–±—ñ: " + inventory;
  } else {
    text.innerText = "–¢–∏ –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–æ–¥–∞—Ç–∏ —Å–≤–æ—é —î–¥–∏–Ω—É –∑–±—Ä–æ—é!";
  }
}

function fightSlime() {
  let num = Math.floor(Math.random() * 3);
  fighting = 0;
  goFight(num);
}

function fightBeast() {
  let num = Math.floor(Math.random() * 4);
  fighting = 1;
  goFight(num);
}

function fightDragon() {
  fighting = 2;
  goFight(0);
}

function goFight(num) {
  update(locations[3]);
  monsterHealth = monsters[fighting].health;
  monsterStats.style.display = "block";
  monsterName.innerText = monsters[fighting].name[num];
  monsterHealthText.innerText = monsterHealth;
}

function attack() {
  text.innerText = "–¢–≤—ñ–π –∫–æ–ª–µ–≥–∞ –∞—Ç–∞–∫—É—î.";
  text.innerText += " –¢–∏ –∞—Ç–∞–∫—É—î—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ " + weapons[currentWeapon].name + ".";
  health -= getMonsterAttackValue(monsters[fighting].level);
  if (isMonsterHit()) {
    monsterHealth -= weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;    
  } else {
    text.innerText += " –¢–∏ –ø—Ä–æ–º–∞—Ö–Ω—É–≤—Å—è! ";
  }
  healthText.innerText = health;
  monsterHealthText.innerText = monsterHealth;
  if (health <= 0) {
    lose();
  } else if (monsterHealth <= 0) {
    fighting === 2 ? winGame() : defeatMonster();
  }
  if (Math.random() <= .1 && inventory.length !== 1) {
    text.innerText += " –¢–∏ —Å–ª–æ–º–∞–ª " + inventory.pop();
    currentWeapon--;
  }
}

function getMonsterAttackValue(level) {
  const hit = (level * 5) - (Math.floor(Math.random() * xp));
  console.log(hit);
  return hit > 0 ? hit : 0;
}

function isMonsterHit() {
  return Math.random() > .2 || health < 20;
}

function dodge() {
  text.innerText = "–¢–∏ —É—Ö–∏–ª—è—î—à—Å—è –≤—ñ–¥ –∞—Ç–∞–∫–∏";
}

function defeatMonster() {
  gold += Math.floor(monsters[fighting].level * 6.7);
  xp += monsters[fighting].level;
  goldText.innerText = gold;
  xpText.innerText = xp;
  update(locations[4]);
}

function lose() {
  update(locations[5]);
}

function winGame() {
  update(locations[6]);
}

function restart() {
  xp = 0;
  health = 100;
  gold = 50;
  currentWeapon = 0;
  inventory = ["–û–ª—ñ–≤–µ—Ü—å"];
  goldText.innerText = gold;
  healthText.innerText = health;
  xpText.innerText = xp;
  goTown();
}

function easterEgg() {
  update(locations[7]);
}

function pickTwo() {
  pick(2);
}

function pickEight() {
  pick(8);
}

function pick(guess) {
  const numbers = [];
  while (numbers.length < 10) {
    numbers.push(Math.floor(Math.random() * 11));
  }
  text.innerText = "–¢–∏ –æ–±—Ä–∞–≤ —á–∏—Å–ª–æ " + guess + ". –û—Å—å –≤–∏–≥—Ä–∞—à–Ω—ñ —á–∏—Å–ª–∞: \n";
  for (let i = 0; i < 10; i++) {
    text.innerText += numbers[i] + "\n";
  }
  if (numbers.indexOf(guess) !== -1) {
    text.innerText += "–ö—Ä—É—Ç–æ! –¢–∏ –≤–∏–≥—Ä–∞–≤ 20 –≥—Ä–Ω!";
    gold += 20;
    goldText.innerText = gold;
  } else {
    text.innerText += "–î—ñ–¥—å–∫–æ! –¢–∏ –≤—Å—Ä–∞–≤ 10 –≥—Ä–Ω!";
    health -= 10;
    healthText.innerText = health;
    if (health <= 0) {
      lose();
    }
  }
}